{"name":"Leaflet.CountrySelect","tagline":"Leaflet plugin control to select and load countries from johan's world.geo.json file.","body":"# Leaflet.CountrySelect\r\nLeaflet plugin control to select and load countries from [johan's world.geo.json file](https://github.com/johan/world.geo.json).\r\n\r\n## [DEMO]()\r\n\r\n## Options\r\n\r\n### Title\r\nAn optional title for the first entry. Defaults to \"Country\". Set as an empty string to omit entirely.\r\n```\r\nvar select = L.control.countrySelect({title:'Pick a country!'});\r\n```\r\n\r\n### Include\r\nAn array of country names from list. If defined, ONLY these countries will be loaded into the select menu.\r\n```\r\nvar select = L.control.countrySelect({include:southAmericanCountries}).addTo(map);\r\n```\r\n\r\n### Exclude\r\nAn array of country names to ommit from list. Must exactly match the names used by the control.\r\n```\r\nvar select = L.control.countrySelect({exclude:coldCountries}).addTo(map);\r\n```\r\n\r\n### Additional Parameters\r\nThe country list is stored in L.Control.CountrySelect.countries as a key/value object with key = Country Name and value = GeoJSON feature.\r\nYou can replace the country list used to load data by setting\r\n```\r\nL.Control.CountrySelect.countries = {/*new-list-of-countries*/}\r\n```\r\n\r\n## Event Listener: Change\r\nThis control can listen on a 'change' event. The returned event includes a 'feature' variable, which contains the GeoJSON feature matching the newly selected country. The [demo](), shown below, adds the selected country as a feature to the map, and removes it once a new entry is selected.\r\n```\r\nvar select = L.control.countrySelect().addTo(map);\r\n\r\nselect.on('change', function(e){\r\n\tif(e.feature === undefined){ //No action when the first item (\"Country\") is selected\r\n\t\treturn;\r\n\t}\r\n\tvar country = L.geoJson(e.feature);\r\n\tif (this.previousCountry != null){\r\n\t\tmap.removeLayer(this.previousCountry);\r\n\t}\r\n\tthis.previousCountry = country;\r\n\r\n\tmap.addLayer(country);\r\n\tmap.fitBounds(country.getBounds());\r\n\t\r\n});\r\n```\r\n(Note: `this.previousCountry` is not a part of the control, just created for this eventHandler to keep track of the prior feature created)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}